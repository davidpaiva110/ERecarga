@model IEnumerable<E_Recarga.Models.Estatisticas>
@{
    ViewBag.Title = "ListarEstacoesEstatisticas";
}

<br />
<section class="jumbotron text-center">
    <div class="container">
        <h1 class="jumbotron-heading">Estatísticas</h1>
        <p class="lead text-muted mb-0">Lista de estações ordenadas por ordem decrescente de afluência.</p>
    </div>
</section>

@using (Html.BeginForm("ListarEstacoesEstatisticas", "RedeProprietariaManage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <p>Pesquise na tabela por alguma Cidade ou Localização:</p>
    <div class="input-group col-md-6">
        <input class="form-control" type="text" placeholder="Pesquisar.." name="pesquisa" value="@ViewBag.pesquisa">
        <span class="input-group-btn">
            <input type="submit" value="Pesquisar" class="btn btn-outline-primary" />
        </span>
    </div>
    <br />
}
@if (Model.Count() <= 0)
{
    <div class="container">
        <h6 class="font-weight-bold">Sem estatísticas.</h6>
    </div>
}
else
{
    <table class="table table-hover">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Estacao.EstacaoId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Estacao.Cidade)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Estacao.Localizacao)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.numeroReservas)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var estacao in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => estacao.Estacao.EstacaoId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => estacao.Estacao.Cidade)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => estacao.Estacao.Localizacao)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => estacao.numeroReservas)
                    </td>
                    <td>
                        @Html.ActionLink("Detalhes", "DetalhesEstatisticas", new { id = estacao.Estacao.EstacaoId }, new { @class = "btn btn-info" })
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <br />
    <canvas id="myChart"></canvas>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>
    <script>
        var estacoes = @Html.Raw(Json.Encode(ViewBag.ESTACOES));
        var nReservas = @Html.Raw(Json.Encode(ViewBag.NRESERVAS));
        var ctx = document.getElementById('myChart').getContext('2d');
var chart = new Chart(ctx, {
    // The type of chart we want to create
    type: 'bar',

    // The data for our dataset
    data: {
        labels: estacoes,
        datasets: [{
            label: 'Número Total de Reservas',
            backgroundColor: 'rgb(0, 123, 254)',
            borderColor: 'rgb(0, 123, 254)',
            barThickness: 'flex',
            data: nReservas
        }]
    },

    // Configuration options go here
        options: {
            scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true  // Barras começarem a zexo
                        }
                    }],
                    xAxes: [{
                        barPercentage: 0.5  // Largura das barras
                    }]
        }}
});
    </script>
}

